# ---------------------------------------------------
# Load Data
# ---------------------------------------------------
preds_df <- read_parquet("datasets/nba_predictions.parquet") %>%
mutate(across(starts_with("predicted_"), ~ round(.x,1)),
home_away = str_to_sentence(home_away)) %>%
arrange(game_date, team_abbreviation, athlete_display_name)
# app.R
library(shiny)
library(bslib)
library(reactable)
library(dplyr)
library(arrow)
library(htmltools)
library(stringr)
library(sortable)
# ---------------------------------------------------
# Load Data
# ---------------------------------------------------
preds_df <- read_parquet("datasets/nba_predictions.parquet") %>%
mutate(across(starts_with("predicted_"), ~ round(.x,1)),
home_away = str_to_sentence(home_away)) %>%
arrange(game_date, team_abbreviation, athlete_display_name)
# ---------------------------------------------------
# Load Data
# ---------------------------------------------------
preds_df <- read_parquet("datasets\nba_predictions.parquet") %>%
mutate(across(starts_with("predicted_"), ~ round(.x,1)),
home_away = str_to_sentence(home_away)) %>%
arrange(game_date, team_abbreviation, athlete_display_name)
#!/usr/bin/env Rscript
# Load Libraries
library(dplyr)
library(hoopR)
library(arrow)
library(stringr)
library(lubridate)
library(tidyr)
library(data.table)
library(purrr)
library(stringr)
library(tibble)
library(parallel)
# Player Gamelogs
player_raw <- load_nba_player_box(
seasons = 2022:as.numeric(format(Sys.Date(), "%Y"))) %>%
select(everything(), -game_date_time, -team_id,
-team_name, -team_location, -team_short_display_name,
-athlete_jersey, -athlete_short_name, -athlete_headshot_href,
-athlete_position_name, -team_uid, -team_slug, -team_logo,
-team_color, -team_alternate_color, -opponent_team_id,
-opponent_team_name, -opponent_team_location,
-opponent_team_display_name, -opponent_team_logo,
-opponent_team_color, -opponent_team_alternate_color,
-reason) %>%
rename(player_id = athlete_id)
# Upcoming Games
schedule <- load_nba_schedule(as.numeric(format(Sys.Date(), "%Y"))) %>%
select(home_abbreviation, away_abbreviation, game_date, season_type) %>%
filter(game_date >= Sys.Date()) %>%
mutate(
home_abbreviation = case_when(
home_abbreviation == "Heat/Hawks" ~ "MIA",
home_abbreviation == "Mavericks/Grizzlies" ~ "MEM",
TRUE ~ home_abbreviation),
away_abbreviation = case_when(
away_abbreviation == "Heat/Hawks" ~ "MIA",
away_abbreviation == "Mavericks/Grizzlies" ~ "MEM",
TRUE ~ away_abbreviation),
is_playoff = ifelse(season_type %in% c(3, 5), 1, 0)
) %>%
select(-season_type)
# Save files
write_parquet(player_raw, "datasets/nba_gamelogs.parquet")
